a=readline()
john
b=10
c=c(10*b)
print(c)
rm(a)
rm(list=ls())
a=readline()
b=10
c=c(10*b)
print(c)
library(sqldf)
library("sqldf")
install.packages(sqldf)
install.packages("sqldf")
library(sqldf)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = acs.csv)
download.file(fileUrl, destfile = "acs.csv")
download.file(fileUrl, destfile = "acs.csv")
acs <- read.csv("acs.csv")
head(acs)
deatch("package:RMySQL", unload = TRUE)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select*from acs")
library(RMySQL)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
cmd <- unique(acs$AGEP)
cmd2 <- sqldf("select distinct AGEP from acs")
cmd3 <- sqldf("select distinct pwgtp1 from acs")
cmd4 <- sqldf("select unique AGEP from acs")
identical(cmd, cmd2$AGEP)
identical(cmd, cmd3$AGEP)
htmlUrl <- "http://biostat.jhsph.edu/~jleek/contact.html"
htmlcode <- readlines(htmlUrl)
htmlcode <- readLines(htmlUrl)
close(htmlUrl)
htmlUrl <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode <- readLines(htmlUrl)
close(htmlUrl)
head(htmlcode)
c(nchar(htmlcode[10], nchar(htmlcode[20], nchar(htmlcode[30], nchar(htmlcode[100])))))
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
SST <- read.fwf(fileUrl, skip=4, widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(SST)
sum(SST[,4])
sum(SST[,4])
setwd("E:/Academics/Coursera/R-Directory/ReproducibleResearch/RepData_PeerAssessment1")
read.csv("activity.csv")
activity <- read.csv("activity.csv")
activity.head()
head(activity)
activity <- read.csv("activity.csv", header = T)
head(activity)
rm(list=ls())
cls
library(dplyr)
activity <- read.csv("activity.csv")
head(activity)
activity_data %>%
select(date, steps)
cls
rm(activity)
activity_data <- read.csv("activity.csv")
head(activity)
head(activity_data)
activity_data %>%
select(date, steps)
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps))
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps), na.rm=T)
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(!any(is.na(tsteps)))
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(any(is.na(tsteps)))
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(is.na(tsteps))
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(!is.na(tsteps)))
activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(!is.na(tsteps))
databydate <- activity_data %>%
select(date, steps) %>%
group_by(date) %>%
summarise(tsteps=sum(steps)) %>%
filter(!is.na(tsteps))
hist(databydate$tsteps, xlab="Total daily steps",
main="Frequency of Total daily steps")
hist(databydate$tsteps, xlab="Total daily steps",
main="Frequency of Total daily steps", breaks = 20)
mean(databydate$tsteps)
median(databydate$tsteps)
library(ggplot2)
stepdata
activity_data %>%
select(interval, steps)
activity_data %>%
select(interval, steps) %>%
filter(!is.na(steps))
activity_data %>%
select(interval, steps) %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarise(tsteps=mean(steps))
databyinterval <- activity_data %>%
select(interval, steps) %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarise(tsteps=mean(steps))
ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line()
ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line() +
theme_classic()
ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line() +
theme_classic() +
labs(title = "Time series of average number of steps taken")
ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line() +
theme_classic(
plot.title(hjust=0.5)
) +
labs(title = "Time series of average number of steps taken")
ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line() +
theme(
plot.title(hjust=0.5)
) +
labs(title = "Time series of average number of steps taken")
g <- ggplot(databyinterval, aes(x=interval, y=tsteps)) +
geom_line()
g + ggtitile("Time series of average number of steps taken")
g + ggtitle("Time series of average number of steps taken")
g + ggtitle("Time series of average number of steps taken") +
theme(plot.title = element_text(hjust=0.5))
g + ggtitle("Time series of average number of steps taken") +
theme(plot.title = element_text(hjust=0.5))+
theme_classic()
g + ggtitle("Time series of average number of steps taken") +
theme_classic(plot.title = element_text(hjust=0.5))+
g + ggtitle("Time series of average number of steps taken") +
theme_classic(plot.title = element_text(hjust=0.5))
theme_classic(plot.title = element_text(hjust=0.5)
g + ggtitle("Time series of average number of steps taken") +
theme_classic(plot.title = element_text(hjust=0.5))
g + ggtitle("Time series of average number of steps taken") +
theme(plot.title = element_text(hjust=0.5))
databyinterval[which(databyinterval$tsteps == max(databyinterval$tsteps)),]
